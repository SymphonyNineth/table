{"version":3,"sources":["components/table/index.js","components/table/table.js","components/spinner/index.js","components/spinner/spinner.js","components/person-details/index.js","components/person-details/person-details.js","components/welcome-message/index.js","components/welcome-message/welcome-message.js","services/source.js","components/pagination/index.js","components/pagination/pagination.js","components/search/index.js","components/search/search.js","components/add-person/index.js","components/add-person/add-person.js","App.js","index.js"],"names":["Table","data","onSort","sortField","hasBeenSorted","sortDirection","onItemSelected","sortSymbol","className","onClick","map","i","id","firstName","lastName","email","phone","Math","floor","random","Spinner","PersonDetails","person","description","address","city","state","streetAddress","zip","readOnly","value","WelcomeMessage","onSourceSelected","Pagination","itemsPerPage","totalItems","paginate","pageNumbers","ceil","push","number","event","href","Search","onValueChange","e","setState","target","this","onSearch","props","onSubmit","type","placeholder","onChange","Component","AddPerson","onClose","onPersonAdded","name","preventDefault","document","forms","addPerson","aria-hidden","htmlFor","required","App","dataSource","isLoading","sortedField","selectedPerson","currentPage","searchTerm","isFormHidden","onPersonSelected","field","sortedData","_","orderBy","clonedData","source","a","fetch","res","json","getFilteredData","toLowerCase","filter","includes","togglePersonAddForm","fields","newPerson","createPerson","filteredData","lastItemIndex","firstItemIndex","currentItems","slice","Fragment","length","pageNumber","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.90ea6428.chunk.js","sourcesContent":["import Table from \"./table\";\r\nexport default Table;\r\n\r\n","import React from \"react\";\r\n\r\nimport \"./table.css\";\r\n\r\nconst Table = ( { data, onSort, sortField, hasBeenSorted, sortDirection, onItemSelected }) => {\r\n        //BLACK MAGIC ALERT\r\n\r\n        const sortSymbol = hasBeenSorted ? sortDirection === \"asc\" ? \"▲\": \"▼\" : true;\r\n    return (\r\n        <table className=\"table\">\r\n            <thead>\r\n            <tr>\r\n                <th\r\n                    onClick={ () => onSort(\"id\") }\r\n                >\r\n                    ID { sortField === \"id\" ? sortSymbol: false}\r\n                </th>\r\n                <th\r\n                    onClick={ () => onSort(\"firstName\") }\r\n                >\r\n                    FirstName { sortField === \"firstName\" ? sortSymbol: false}\r\n\r\n                </th>\r\n                <th\r\n                    onClick={ () =>  onSort(\"lastName\") }\r\n                >\r\n                    LastName { sortField === \"lastName\" ? sortSymbol: false}\r\n\r\n                </th>\r\n                <th\r\n                    onClick={ () =>  onSort(\"email\") }\r\n                >\r\n                    Email { sortField === \"email\" ? sortSymbol: false}\r\n\r\n                </th>\r\n                <th\r\n                    onClick={ () => onSort(\"phone\") }\r\n                >\r\n                    Phone { sortField === \"phone\" ? sortSymbol: false}\r\n\r\n                </th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n                data.map(( i ) => (\r\n                    <tr key={ i.id + i.phone + Math.floor(Math.random() * 1000) + 1000 }\r\n                        onClick={ () => onItemSelected(i)  }\r\n                    >\r\n                        <td>{ i.id }</td>\r\n                        <td>{ i.firstName }</td>\r\n                        <td>{ i.lastName }</td>\r\n                        <td>{ i.email }</td>\r\n                        <td>{ i.phone }</td>\r\n                    </tr>\r\n                ))\r\n\r\n             }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table;\r\n","import Spinner from \"./spinner\";\r\nexport default Spinner;","import React from \"react\";\r\n\r\nimport \"./spinner.css\";\r\n\r\nconst Spinner = () => {\r\n    return (\r\n    <div className=\"spinner\">\r\n        <div className=\"loadingio-spinner-spin-k7ck2709i0s\">\r\n            <div className=\"ldio-wsykofk4gm\">\r\n                <div>\r\n                    <div/>\r\n                </div>\r\n                <div>\r\n                    <div/>\r\n                </div>\r\n                <div>\r\n                    <div/>\r\n                </div>\r\n                <div>\r\n                    <div/>\r\n                </div>\r\n                <div>\r\n                    <div/>\r\n                </div>\r\n                <div>\r\n                    <div/>\r\n                </div>\r\n                <div>\r\n                    <div/>\r\n                </div>\r\n                <div>\r\n                    <div/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import PersonDetails from \"./person-details\";\r\n\r\nexport default PersonDetails;","import React from \"react\";\r\n\r\nimport \"./person-details.css\"\r\n\r\n\r\nconst PersonDetails = (\r\n    { person :{ firstName, lastName, description,\r\n        address: {city, state, streetAddress, zip}\r\n}}) => {\r\n    return (\r\n        <div className=\"person-details\">\r\n            <div>Выбран пользователь <b>{`${ firstName } ${ lastName }`}</b></div>\r\n            <div>Описание:</div>\r\n            <div><textarea readOnly value={ description } /></div>\r\n            <div>Адрес проживания: <b>{ streetAddress }</b></div>\r\n            <div>Город: <b>{ city }</b></div>\r\n            <div>Провинция/штат: <b>{ state }</b></div>\r\n            <div>Индекс: <b>{ zip }</b></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonDetails;","import WelcomeMessage from \"./welcome-message\";\r\nexport default WelcomeMessage;","import React from \"react\";\r\n\r\nimport { smallDataURL, bigDataURL } from \"../../services/source\";\r\n\r\nimport \"./welcome-message.css\";\r\n\r\n// Should Add button component\r\n\r\nconst WelcomeMessage = ( { onSourceSelected } ) => {\r\n    return (\r\n        <div className=\"welcome-message\">\r\n            <button className=\"btn btn-success\" onClick={ () => onSourceSelected( smallDataURL )}>Small Data</button>\r\n            <button className=\"btn btn-primary\" onClick={ () => onSourceSelected( bigDataURL )}>Big Data</button>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default WelcomeMessage;","const smallDataURL = \"http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D\";\r\nconst bigDataURL = \"http://www.filltext.com/?rows=1000&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&delay=3&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D\";\r\n\r\nexport { smallDataURL, bigDataURL };","import Pagination from \"./pagination\";\r\n\r\nexport default Pagination;","import React from 'react';\r\n\r\nconst Pagination = ({ itemsPerPage, totalItems, paginate }) => {\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className='pagination'>\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} className='page-item'>\r\n                        <a onClick={(event) => paginate(number, event)} href='#' className='page-link'>\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import Search from \"./search\";\r\n\r\nexport default Search;","import React, { Component } from \"react\";\r\n\r\n\r\nimport \"./search.css\"\r\n\r\nexport default class Search extends Component{\r\n\r\n    state = {\r\n        value: \"\",\r\n    }\r\n    onValueChange = (e) => {\r\n    this.setState({\r\n        value: e.target.value,\r\n    })\r\n}\r\n\r\n    render() {\r\n        const { value } = this.state;\r\n        const { onSearch } = this.props;\r\n        return (\r\n            <form onSubmit={ e => onSearch(value, e)} className=\"input-group mb-3 mt-3\">\r\n                <input\r\n                    value={ value } type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Type to Search\"\r\n                    onChange={ this.onValueChange }\r\n                />\r\n                <div className=\"input-group-append\">\r\n                    <button\r\n                        className=\"btn btn-outline-secondary\"\r\n                        type=\"submit\"\r\n                        id=\"button-addon2\"\r\n                    >Search</button>\r\n                </div>\r\n            </form>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\n","import AddPerson from \"./add-person\";\r\n\r\nexport default AddPerson;","import React from \"react\";\r\n\r\nimport \"./add-person.css\";\r\n\r\n\r\n\r\nconst AddPerson = ( { onClose, onPersonAdded } ) => {\r\n   const transmitEvent = ( event ) => {\r\n       event.preventDefault();\r\n       onPersonAdded( document.forms.addPerson );\r\n\r\n\r\n   }\r\n    return (\r\n        <form className=\"add-person\" name=\"addPerson\" onSubmit={ transmitEvent }>\r\n            <button\r\n                onClick={ () => onClose() }\r\n                type=\"button\" className=\"close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"data-input\">ID</label>\r\n                <input required name=\"id\"\r\n                    type=\"text\" className=\"form-control\" id=\"data-input\"\r\n                       placeholder=\"ID\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"data-input\">First Name</label>\r\n                <input required name=\"firstName\"\r\n                    type=\"text\" className=\"form-control\" id=\"data-input\"\r\n                       placeholder=\"First Name\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label  htmlFor=\"data-input\">Last Name</label>\r\n                <input required name=\"lastName\"\r\n                    type=\"text\" className=\"form-control\" id=\"data-input\"\r\n                       placeholder=\"Last Name\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"data-input\">Email address</label>\r\n                <input required name=\"email\"\r\n                    type=\"email\" className=\"form-control\" id=\"data-input\"\r\n                       placeholder=\"Email\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"data-input\">Phone</label>\r\n                <input required name=\"phone\"\r\n                    type=\"text\" className=\"form-control\" id=\"data-input\"\r\n                       placeholder=\"Phone\" />\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-success\">Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddPerson;","import React, { Component } from \"react\"\nimport _ from \"lodash\";\n\nimport './App.css';\n\nimport Table from \"./components/table\";\nimport Spinner from \"./components/spinner\";\nimport PersonDetails from \"./components/person-details\";\nimport WelcomeMessage from \"./components/welcome-message\";\nimport Pagination from \"./components/pagination\";\nimport Search from \"./components/search\";\nimport AddPerson from \"./components/add-person\";\n\nexport default class App extends Component {\n    state = {\n        dataSource: \"\",\n        isLoading: false,\n        data: [],\n        sortDirection: \"asc\",\n        sortedField: \"\",\n        hasBeenSorted: false,\n        selectedPerson: null,\n        currentPage: 1,\n        searchTerm: \"\",\n        isFormHidden: true,\n    }\n    onPersonSelected = person => {\n        this.setState({\n            selectedPerson: person\n        })\n    }\n    // UNEFFICENT CODE\n    onSort = field => {\n        const sortDirection = this.state.sortDirection === \"asc\" ? \"desc\" : \"asc\";\n        const sortedData = _.orderBy(this.clonedData, field, sortDirection);\n        this.setState({\n            data: sortedData,\n            sortDirection,\n            sortedField: field,\n            hasBeenSorted: true,\n        });\n    }\n\n    createPerson(person){\n        const id = person[1].value,\n              firstName = person[2].value,\n              lastName = person[3].value,\n              email = person[4].value,\n              phone = person[5].value;\n        return {\n            id,\n            firstName,\n            lastName,\n            email,\n            phone,\n            description: \"No data\",\n            address: { streetAddress: \"No data\", city: \"No data\", state: \"No data\", zip: \"No data\" }\n        }\n    }\n    onSourceSelected = async source => {\n        this.setState({\n            dataSource: source,\n            isLoading: true,\n        });\n        const res = await fetch(source);\n        const data = await res.json();\n        this.clonedData = data;\n        this.setState({\n            isLoading: false,\n            data,\n        })\n    }\n\n    onSearch = (searchTerm, event) => {\n        event.preventDefault();\n        this.setState({\n            searchTerm,\n            currentPage: 1,\n        })\n    }\n\n    getFilteredData = () => {\n        let { data, searchTerm } = this.state;\n        if(!searchTerm) return data;\n        searchTerm = searchTerm.toLowerCase()\n        return data.filter (({ firstName, lastName, email, phone }) => {\n        if(firstName.toLowerCase().includes(searchTerm) || lastName.toLowerCase().includes(searchTerm) || email.toLowerCase().includes(searchTerm) || phone.toLowerCase().includes(searchTerm)){\n            return true;\n        } return false;\n        })\n    }\n\n    togglePersonAddForm = () => {\n      this.setState(\n          () => {\n              return {\n                  isFormHidden: !this.state.isFormHidden,\n              }\n          }\n      )\n    }\n    onClose = () => {\n        this.setState(\n            {\n                isFormHidden: true,\n            }\n        )\n    }\n\n\n    onPersonAdded = ( fields ) => {\n    const newPerson = this.createPerson(fields);\n    this.setState(() => {\n        return {\n        data : [newPerson, ...this.state.data],\n        }\n    })\n    }\n\n\n   render() {\n        const paginate = (pageNumber, event) =>\n        {\n            event.preventDefault();\n            this.setState({\n            currentPage: pageNumber,\n        })\n        }\n        const filteredData = this.getFilteredData();\n        const  itemsPerPage = 50;\n        const { isLoading, data, dataSource, currentPage, isFormHidden} = this.state;\n        const lastItemIndex = currentPage * itemsPerPage;\n        const firstItemIndex = lastItemIndex - itemsPerPage;\n        const currentItems = filteredData.slice(firstItemIndex, lastItemIndex);\n        if (!dataSource) return <WelcomeMessage onSourceSelected={ this.onSourceSelected } />;\n       return (\n           <div className=\"container\">\n               { isLoading ? <Spinner/>\n               : <React.Fragment>\n                       { !isFormHidden ? <AddPerson onPersonAdded={ this.onPersonAdded } onClose={ this.onClose } /> : null }\n                       <button\n                           onClick={ this.togglePersonAddForm }\n                           className=\"btn btn-outline-primary mt-3\">Add Person</button>\n                       <Search onSearch={ this.onSearch } />\n                   <Table\n                   data={ currentItems }\n                   onSort={ this.onSort }\n                   sortDirection={ this.state.sortDirection }\n                   sortField={ this.state.sortedField }\n                   hasBeenSorted={ this.state.hasBeenSorted }\n                   onItemSelected={ this.onPersonSelected }\n               />\n               </React.Fragment>\n\n               }\n               {filteredData.length <= itemsPerPage ? null : <Pagination itemsPerPage={itemsPerPage} totalItems={data.length} paginate={ paginate }/>}\n               {\n                   this.state.selectedPerson ? <PersonDetails person={this.state.selectedPerson} /> : true\n\n               }\n\n           </div>\n       )\n\n   }\n}","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}